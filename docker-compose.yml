version: '3'

volumes:
  app-volume:

services:
  logs_template: &logs_template
    image: alpine
    logging:
      options:
        max-size: "200k"
        max-file: "7"

  envs: &envs_template
    image: alpine
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DJ_DEFAULT_FROM_EMAIL=${DJ_DEFAULT_FROM_EMAIL}
      - DJ_EMAIL_HOST_USER=${DJ_EMAIL_HOST_USER}
      - DJ_EMAIL_HOST_PASSWORD=${DJ_EMAIL_HOST_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - REDIS_HOST=${REDIS_HOST}

  redis:
    container_name: dnd5e_redis
    image: "redis:alpine"
    restart: unless-stopped

  celery:
    <<: *envs_template
    container_name: dnd5e_celery
    build: .
    restart: unless-stopped
    command: celery -A xardas worker --loglevel=debug --concurrency=4
    depends_on:
    - redis
    volumes:
    - app-volume:/xardas

  web:
    <<: [*logs_template, *envs_template ]
    container_name: dnd5e
    build: .
    restart: unless-stopped
    expose:
      - 8000
    ports:
      - 8000:8000
    depends_on:
      - redis
    volumes:
      - app-volume:/xardas
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
