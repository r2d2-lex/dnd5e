# Generated by Django 3.0.2 on 2021-02-08 06:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_activated', models.BooleanField(db_index=True, default=True, verbose_name='Прошёл активацию?')),
                ('send_message', models.BooleanField(default=True, verbose_name='Слать сообщение о новых коментариях?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CharClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Варвар', 'Варвар'), ('Бард', 'Бард'), ('Жрец', 'Жрец'), ('Друид', 'Друид'), ('Воин', 'Воин'), ('Монах', 'Монах'), ('Паладин', 'Паладин'), ('Следопыт', 'Следопыт'), ('Плут', 'Плут'), ('Чародей', 'Чародей'), ('Колдун', 'Колдун'), ('Волшебник', 'Волшебник')], db_index=True, max_length=20, unique=True, verbose_name='Имя класса персонажа')),
                ('caption', models.CharField(max_length=24, null=True, verbose_name='Caption класса')),
                ('description', models.CharField(max_length=65536, null=True, verbose_name='Описание класса')),
            ],
            managers=[
                ('char_classes', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CharRaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('dwarf', 'Дварф'), ('elf', 'Эльф'), ('half', 'Полурослик'), ('human', 'Человек'), ('dragon', 'Драконорождённый'), ('gnom', 'Гном'), ('halfelf', 'Полуэльф'), ('halfork', 'Полуорк'), ('tifling', 'Тифлинг')], db_index=True, max_length=20, unique=True, verbose_name='Имя рассы персонажа')),
                ('caption', models.CharField(max_length=24, null=True, verbose_name='Caption рассы')),
                ('description', models.CharField(max_length=65536, null=True, verbose_name='Описание рассы')),
            ],
            managers=[
                ('char_races', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MobBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.IntegerField(default=8, verbose_name='Сила персонажа')),
                ('dexterity', models.IntegerField(default=8, verbose_name='Ловкость персонажа')),
                ('constitution', models.IntegerField(default=8, verbose_name='Телосложение персонажа')),
                ('intellegence', models.IntegerField(default=8, verbose_name='Интеллект персонажа')),
                ('wisdom', models.IntegerField(default=8, verbose_name='Мудрость персонажа')),
                ('chrarisma', models.IntegerField(default=8, verbose_name='Харизма персонажа')),
                ('expirence_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('strength_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('dexterity_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('constitution_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('intellegence_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('wisdom_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('chrarisma_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('armor_class', models.IntegerField(default=0, null=True, verbose_name='Класс доспеха')),
                ('speed', models.CharField(max_length=255, null=True, verbose_name='Скорость персонажа')),
                ('hitpoints_max', models.IntegerField(default=0, null=True, verbose_name='Максимальое здоровье')),
                ('hitpoints_str', models.CharField(max_length=255, null=True, verbose_name='Кости здоровья')),
                ('world_view', models.CharField(max_length=255, null=True, verbose_name='Мировозрение')),
                ('skills', models.TextField(null=True, verbose_name='навыки')),
                ('saving_throws', models.TextField(null=True, verbose_name='спасброски')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('feelings', models.TextField(null=True, verbose_name='чувства')),
                ('abilities', models.TextField(null=True, verbose_name='способности')),
                ('actions', models.TextField(null=True, verbose_name='действия')),
                ('modified', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время модификации')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Имя моба')),
                ('size', models.CharField(max_length=255, verbose_name='Размер')),
                ('mob_type', models.CharField(max_length=255, verbose_name='тип')),
                ('danger', models.CharField(max_length=20, null=True, verbose_name='опасность')),
                ('material_source', models.CharField(max_length=255, null=True, verbose_name='источник материала')),
                ('armor_class_str', models.CharField(max_length=255, null=True, verbose_name='описание доспеха')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='Название заклинания')),
                ('level', models.IntegerField(verbose_name='Уровень заклинания')),
                ('school', models.IntegerField(choices=[(0, 'неизвестная'), (1, 'воплощение'), (2, 'очарование'), (3, 'ограждение'), (4, 'иллюзия'), (5, 'вызов'), (6, 'некромантия'), (7, 'преобразование'), (8, 'прорицание')], default=0, verbose_name='Школа заклинания')),
                ('comp_is_verbal', models.BooleanField(default=False, verbose_name='Вербальные требования')),
                ('comp_is_somatic', models.BooleanField(default=False, verbose_name='Соматичесские требования')),
                ('comp_is_material', models.BooleanField(default=False, verbose_name='Материальные компоненты')),
                ('components', models.CharField(max_length=131072, verbose_name='Компоненты заклинания')),
                ('distance', models.CharField(max_length=65536, verbose_name='Дистанция заклинания')),
                ('duration', models.CharField(max_length=65536, verbose_name='Длительность заклинания')),
                ('cast_time', models.CharField(max_length=65536, verbose_name='Время сотворения заклинания')),
                ('is_concentrate', models.BooleanField(default=False, verbose_name='Концентрация')),
                ('is_ritual', models.BooleanField(default=False, verbose_name='Ритуал')),
                ('description', models.TextField(verbose_name='Описание заклинания')),
                ('gold', models.IntegerField(null=True, verbose_name='Золото')),
                ('spell_classes', models.ManyToManyField(to='main.CharClasses', verbose_name='Класс персонажа')),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('spells', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CharBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.IntegerField(default=8, verbose_name='Сила персонажа')),
                ('dexterity', models.IntegerField(default=8, verbose_name='Ловкость персонажа')),
                ('constitution', models.IntegerField(default=8, verbose_name='Телосложение персонажа')),
                ('intellegence', models.IntegerField(default=8, verbose_name='Интеллект персонажа')),
                ('wisdom', models.IntegerField(default=8, verbose_name='Мудрость персонажа')),
                ('chrarisma', models.IntegerField(default=8, verbose_name='Харизма персонажа')),
                ('expirence_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('strength_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('dexterity_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('constitution_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('intellegence_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('wisdom_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('chrarisma_modifier', models.IntegerField(default=0, verbose_name='модификатор')),
                ('armor_class', models.IntegerField(default=0, null=True, verbose_name='Класс доспеха')),
                ('speed', models.CharField(max_length=255, null=True, verbose_name='Скорость персонажа')),
                ('hitpoints_max', models.IntegerField(default=0, null=True, verbose_name='Максимальое здоровье')),
                ('hitpoints_str', models.CharField(max_length=255, null=True, verbose_name='Кости здоровья')),
                ('world_view', models.CharField(max_length=255, null=True, verbose_name='Мировозрение')),
                ('skills', models.TextField(null=True, verbose_name='навыки')),
                ('saving_throws', models.TextField(null=True, verbose_name='спасброски')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('feelings', models.TextField(null=True, verbose_name='чувства')),
                ('abilities', models.TextField(null=True, verbose_name='способности')),
                ('actions', models.TextField(null=True, verbose_name='действия')),
                ('modified', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время модификации')),
                ('playername', models.CharField(max_length=20, null=True, verbose_name='Реальное имя персонажа')),
                ('name', models.CharField(db_index=True, max_length=20, verbose_name='Имя персонажа')),
                ('expirence', models.IntegerField(default=0, verbose_name='Опыт персонажа')),
                ('level', models.IntegerField(default=1, verbose_name='Уровень персонажа')),
                ('prof_bonus', models.IntegerField(default=0, null=True, verbose_name='Бонус мастерства')),
                ('initiative', models.IntegerField(default=0, null=True, verbose_name='Инициатива')),
                ('inspiration', models.IntegerField(default=0, null=True, verbose_name='Вдохновение')),
                ('hitpoints_curr', models.IntegerField(default=0, null=True, verbose_name='Текущее здоровье')),
                ('hitpoints_temp', models.IntegerField(default=0, null=True, verbose_name='Временные очки здоровья')),
                ('gender', models.BooleanField(default=True, verbose_name='Пол')),
                ('age', models.IntegerField(default=21, null=True, verbose_name='Возраст персонажа')),
                ('height', models.IntegerField(default=175, null=True, verbose_name='Рост персонажа')),
                ('weight', models.IntegerField(default=60, null=True, verbose_name='Вес персонажа')),
                ('hair', models.CharField(max_length=20, null=True, verbose_name='Цвет волос')),
                ('eyes', models.CharField(max_length=20, null=True, verbose_name='Цвет глаз')),
                ('skin', models.CharField(max_length=20, null=True, verbose_name='Цвет кожы')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('pers_traits', models.CharField(max_length=20, null=True, verbose_name='Персональные черты')),
                ('ideals', models.CharField(max_length=20, null=True, verbose_name='Идеалы')),
                ('bonds', models.CharField(max_length=20, null=True, verbose_name='Привязанности')),
                ('flaws', models.CharField(max_length=20, null=True, verbose_name='Пороки')),
                ('char_history', models.TextField(default='', verbose_name='История персонажа')),
                ('gold_count', models.IntegerField(default=0, null=True, verbose_name='Золото персонажа')),
                ('silver_count', models.IntegerField(default=0, null=True, verbose_name='Серебро персонажа')),
                ('copper_count', models.IntegerField(default=0, null=True, verbose_name='Медь персонажа')),
                ('char_classes', models.ManyToManyField(choices=[('Варвар', 'Варвар'), ('Бард', 'Бард'), ('Жрец', 'Жрец'), ('Друид', 'Друид'), ('Воин', 'Воин'), ('Монах', 'Монах'), ('Паладин', 'Паладин'), ('Следопыт', 'Следопыт'), ('Плут', 'Плут'), ('Чародей', 'Чародей'), ('Колдун', 'Колдун'), ('Волшебник', 'Волшебник')], to='main.CharClasses', verbose_name='Класс персонажа')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Владелец персонажа')),
                ('races', models.ManyToManyField(choices=[('dwarf', 'Дварф'), ('elf', 'Эльф'), ('half', 'Полурослик'), ('human', 'Человек'), ('dragon', 'Драконорождённый'), ('gnom', 'Гном'), ('halfelf', 'Полуэльф'), ('halfork', 'Полуорк'), ('tifling', 'Тифлинг')], max_length=20, to='main.CharRaces', verbose_name='Расса персонажа')),
                ('spells', models.ManyToManyField(to='main.Spell')),
            ],
            options={
                'ordering': ['-modified'],
            },
            managers=[
                ('char', django.db.models.manager.Manager()),
            ],
        ),
    ]
